	// Sorting files transform
    
    /* p.txt generated by 
     find /etc /usr -type d | sort --random-sort > p.txt
     */
    
    /*
    
    "use strict";
    var fs=require('fs');

    function* readLine(readable) {
    readable.on('data',function(chunk) {
    })'
    let seperator = "\n";
    yeild line;
    }
    
    var file = fs.createReadStream("p.txt");
    var liner = readLine(file);
    console.log(liner.next());
    console.log(liner.next());
    */



    "use strict";
    var fs=require('fs');
    var Stream = require('stream');
    var StringDecoder = require('string_decoder').StringDecoder;

    class ReadLine extends Stream.Transform {
    constructor (readable) {
    
    super({readableObjectMode:true});
    readable.pipe(this);
    this._buffer = "";
    this._decoder = new StringDecoder('utf8');
    }
    
    _transform (chunk,enc,done) {
    let linebreak = /\n/;
    this._buffer += this._decoder.write(chunk);
    var lines = this._buffer.split(linebreak);
    this._buffer = lines.pop();
    
    var lineGenerator = (function*() {
      for(let l=0; l<=lines.length; l++) {
     yield lines[l];
     }
    });
    
   this._lineGen = lineGenerator();
    
    }
    
    ready (cb) {
    setTimeout(cb,400);
    }
    
    
    next () {
    return this._lineGen.next();
    }

    }

    
    var file = fs.createReadStream("p.txt");
    
    var liner = new ReadLine(file);
    
    liner.ready( ()=> {
    console.log(liner.next());
    console.log(liner.next());
    });
   


    